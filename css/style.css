:root {
  font-size: 62.5%;
}

span {
  pointer-events: none;
  /* This was literally all that was needed! It wasn't a bug in JavaScript at all! Rather a bug in my program, the issue was that the span click event was bubbling up to the button click listener and since sometimes i clicked the span the dom token list returned an empty list for class list, it wasn't JS bugging out at all and not being able to retrieve the classlist, rather we weren't even checking the button itself but the span! OMG*/
}

.container {
  margin-inline: auto;
  width: min(100% - 2rem, 1300px);
}
/* Here we are setting display flex for the children of the calculator, and allowing them to wrap. We are also setting up the calculators structure */

.calculator {
  border-radius: 5px;
  padding: 3rem;
  max-width: 400px;
  text-align: center;
  margin-inline: auto;
  margin-block-start: 15rem;
  box-shadow: -2px -4px 10px -5px
             rgba(0, 0, 0, 0.7);
}

/* To get the h1 to fill up the space for the result screen we can set a width of 100% on it and also adding some styles to it.*/

.screen {
  box-shadow: 0px 0px 0px 3px hsl(19, 95%, 80%);
  background-color: #F08834;
  padding-inline-end: 1rem;
  border-radius: 1rem;
  text-align: right;
  min-height: 80px;
  min-width: 100%;
}

.buttons-wrapper {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  margin-block-start: 2rem;
  margin-inline: auto;
  width: 90%;
  gap: 1rem;
}

#expression {
  font-size: 1.5rem;
}

#current-value {
  font-size: 3rem;
}

/* Default Button styling */

.button {
  flex-basis: 20%;
  position: relative;
  border: none;
  border-radius: 50%;
  background: hsl(180, 100%, 90%);
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
  transition: background 100ms ease-in,
  box-shadow 100ms ease-in,
  transform 100ms ease-in;
}

.button_number,
.button_operator,
.button_features {
  background-color: hsl(189, 84%, 85%);
  box-shadow: -2px -4px 10px -4px rgba(0, 0, 0, 0.7);
} */

.button_number:hover,
.button_operator:hover,
.button_features:hover {
  background-color: hsl(189, 84%, 75%);
  transform: translateY(-5px);
  box-shadow: -2px -4px 15px -4px rgba(0, 0, 0, 0.5);
}

.button.animate-button {
  transform: translateY(-2px);
  box-shadow: -2px -4px 6px -4px rgba(0, 0, 0, 0.7);
}

.button::after {
  content: '';
  display: block;
  padding-block-end: 100%;
}

.flex-placeholder {
  background: transparent;
}
/* Getting the clear buttons to sit next to each other */


#clear-entry {
  font-size: 2rem;
}

#clear-entry span {
  left: 18%;
}